{"mappings":"oeAEA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAoBxC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,CAACC,EAASC,KAE5BC,YAAY,KAGVN,EACFI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,MAEnBA,MA9BHR,EAAOgB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAAYC,OAAQjB,EAAQkB,OAC5BC,EAAOF,OAAQhB,EAAOiB,OACtBE,EAASH,OAAQf,EAASgB,OAChC,IAAIG,EAAQL,EAEZ,IAAK,IAAIM,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EAErDnB,EAAcmB,EAAUD,GACrBE,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,KAAYV,EAAA6B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,SAAYqB,OAC7F,EAAKtB,WAAUC,WAAcV,EAAA6B,OAAMG,QAAC,sBAASvB,QAAgCC,SAChFgB,GAAOF","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix, { Notify } from 'notiflix';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form')\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener(\"submit\", onSubmitForm)\n\nfunction onSubmitForm(eve) {\n  eve.preventDefault();\n  const firstStep = Number (delayEl.value);\n  const step = Number (stepEl.value);\n  const amount = Number (amountEl.value);\n  let delay = firstStep;\n\n  for (let position = 1; position <= amount; position += 1) {\n    \n    createPromise(position, delay)\n      .then(({ position, delay }) => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n      .catch(({ position, delay }) => Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`))\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise ((resolve, reject) => {\n    \n    setTimeout (() => {\n      \n  \n  if (shouldResolve) {\n    resolve({position, delay})\n  } else {\n    reject({position, delay});\n  }\n}, delay);\n  });\n};\n\n\n// function onFormSubmit(event) {\n//   event.preventDefault();\n//   const firstStep = Number(inputfirstDelay.value);\n//   const stepDelay = Number(inputStepDelay.value);\n//   const amount = Number(inputAmount.value);\n//   let delay = firstStep;\n\n// for (let position = 1; position <= amount; position += 1) {\n\n//   createPromise (position, delay)\n//   .then(({ position, delay }) => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n//   .catch(({ position, delay }) => Notify.success(`❌ Rejected promise ${position} in ${delay}ms`))\n//   delay += stepDelay;\n// }\n// }\n\n\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","eve","preventDefault","firstStep","Number","value","step","amount","delay1","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.a25d89f0.js.map"}